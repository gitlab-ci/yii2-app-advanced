image: zacksleo/docker-composer:1.1
before_script:
    - 'which ssh-agent || ( apk update && apk add openssh-client)'
    - apk add rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" > ~/deploy.key
    - chmod 0600 ~/deploy.key
    - ssh-add ~/deploy.key
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - export APP_ENV=testing
stages:
    - prepare
    - testing
    - build
    - deploy
variables:
    COMPOSER_CACHE_DIR: "/cache/composer"
    DOCKER_DRIVER: overlay
installing-dependencies:
    stage: prepare
    script:
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest
        - composer dump-autoload --optimize
    artifacts:
        name: "vendor"
        untracked: true
        expire_in: 60 mins
        paths:
            - $CI_PROJECT_DIR/vendor
code-review:
    stage: testing
    dependencies:
        - installing-dependencies
    script:
        - php vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
        - php vendor/bin/phpcs --standard=PSR2 --ignore=vendor/,packages/,console/migrations/,common/helpers -w --colors ./
    except:
        - tags
unit-test:
    stage: testing
    services:
        - mysql:5.6
        - redis:latest
    variables:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: web
        MYSQL_USER: web
        MYSQL_PASSWORD: web
    dependencies:
        - installing-dependencies
    coverage: '/^\s*Lines:\s*\d+.\d+\%/'
    script:
        - cp tests/.env .env
        - ./yii migrate/up --interactive=0
        - php -S localhost:80 --docroot api/tests &>/dev/null&
        - ./vendor/bin/codecept run unit -c tests --coverage --no-colors
    artifacts:
        name: "debug"
        when: on_failure
        untracked: true
        expire_in: 60 mins
        paths:
            - rm -rf $CI_PROJECT_DIR/vendor
            - $CI_PROJECT_DIR/api/runtime
            - $CI_PROJECT_DIR/tests/_output
    only:
        - develop
        - master
api-test:
    stage: testing
    services:
        - mysql:5.6
        - redis:latest
    variables:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: web
        MYSQL_USER: web
        MYSQL_PASSWORD: web
    dependencies:
        - installing-dependencies
    script:
        - cp tests/.env .env
        - ./yii migrate/up --interactive=0
        - php -S localhost:80 --docroot api/tests &>/dev/null&
        - ./vendor/bin/codecept run api -c tests
    artifacts:
        name: "debug"
        when: on_failure
        untracked: true
        expire_in: 60 mins
        paths:
            - rm -rf $CI_PROJECT_DIR/vendor
            - $CI_PROJECT_DIR/api/runtime
            - $CI_PROJECT_DIR/tests/_output
    only:
        - develop
        - master
test-image:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - installing-dependencies
    script:
        - docker login -u username -p password registry.domain.com
        - docker build -t registry.domain.com/namespace/$CI_PROJECT_NAME:latest .
        - docker push registry.domain.com/namespace/$CI_PROJECT_NAME:latest
    only:
        - develop
staging-image:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - installing-dependencies
    script:
        - docker login -u username -p password registry.domain.com
        - docker build -t registry.domain.com/namespace/$CI_PROJECT_NAME:stable .
        - docker push registry.domain.com/namespace/$CI_PROJECT_NAME:stable
    only:
        - master
production-image:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    dependencies:
        - installing-dependencies
    script:
        - docker login -u username -p password registry.domain.com
        - docker build -t registry.domain.com/namespace/$CI_PROJECT_NAME:$CI_COMMIT_TAG .
        - docker push registry.domain.com/namespace/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    only:
        - tags
testing-server:
    stage: deploy
    image: alpine
    variables:
        DEPLOY_SERVER: "deploy server address"
    script:
        - cd deploy
        - rsync -rtvhze ssh . root@$DEPLOY_SERVER:/dirname/$CI_PROJECT_NAME --stats
        - CHOWN_DIR="frontend/runtime frontend/web/assets frontend/web/galleries frontend/web/uploads backend/runtime backend/web/assets backend/rbac console/runtime api/runtime"
        - ssh root@$DEPLOY_SERVER "docker login -u username -p password registry.domain.com"
        - ssh root@$DEPLOY_SERVER "cd /dirname/$CI_PROJECT_NAME && docker-compose stop && docker-compose rm -f && docker-compose pull && docker-compose up -d"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME chown www-data:www-data $CHOWN_DIR"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME ./yii migrate/up --interactive=0"
    only:
        - develop
    environment:
        name: testing
        url: http://$TEST_SERVER
staging-server:
    stage: deploy
    image: alpine
    variables:
        DEPLOY_SERVER: "deploy server address"
    before_script: []
    script:
        - cd deploy
        - rsync -rtvhze ssh . root@$DEPLOY_SERVER:/dirname/$CI_PROJECT_NAME --stats
        - CHOWN_DIR="frontend/runtime frontend/web/assets frontend/web/galleries frontend/web/uploads backend/runtime backend/web/assets backend/rbac console/runtime api/runtime"
        - ssh root@$DEPLOY_SERVER "docker login -u username -p password registry.domain.com"
        - ssh root@$DEPLOY_SERVER "cd /data/$CI_PROJECT_NAME && docker-compose stop && docker-compose rm -f && docker-compose pull && docker-compose up -d"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME chown www-data:www-data $CHOWN_DIR"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME ./yii migrate/up --interactive=0"
    only:
        - master
    environment:
        name: staging
        url: http://$DEPLOY_SERVER
production-server:
    stage: deploy
    image: alpine
    variables:
        DEPLOY_SERVER: "deploy server address"
    script:
        - cd deploy
        - rsync -rtvhze ssh . root@$DEPLOY_SERVER:/dirname/$CI_PROJECT_NAME --stats
        - CHOWN_DIR="frontend/runtime frontend/web/assets frontend/web/galleries frontend/web/uploads backend/runtime backend/web/assets backend/rbac console/runtime api/runtime"
        - ssh root@$DEPLOY_SERVER "docker login -u username -p password registry.domain.com"
        - ssh root@$DEPLOY_SERVER "cd /data/$CI_PROJECT_NAME && docker-compose stop && docker-compose rm -f && docker-compose pull && docker-compose up -d"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME chown www-data:www-data $CHOWN_DIR"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME ./yii migrate/up --interactive=0"
    only:
        - tags
    when: manual
    environment:
        name: production
        url: http://$DEPLOY_SERVER

